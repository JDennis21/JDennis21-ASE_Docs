{
  "api/ASE_Assignment.AppArray.html": {
    "href": "api/ASE_Assignment.AppArray.html",
    "title": "Class AppArray | ASE_Docs",
    "keywords": "Class AppArray Array class for creating array variables within the BOOSE language. Inheritance object Command Evaluation AppArray AppPeek AppPoke Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppArray : Evaluation, ICommand Fields | Edit this page View Source peekValue Declaration protected string peekValue Field Value Type Description string | Edit this page View Source pokeValue Declaration protected string pokeValue Field Value Type Description string | Edit this page View Source valueInt Declaration protected int valueInt Field Value Type Description int | Edit this page View Source valueReal Declaration protected double valueReal Field Value Type Description double | Edit this page View Source variableType Declaration protected string variableType Field Value Type Description string Methods | Edit this page View Source CheckParameters(string[]) Checks if the array has been called with the correct number of parameters. Declaration public override void CheckParameters(string[] parameterList) Parameters Type Name Description string[] parameterList Variable containing the parameters passed. Overrides Evaluation.CheckParameters(string[]) Exceptions Type Condition CommandException Thrown if 3 > number of parameters > 4 | Edit this page View Source Compile() Compile method calls BOOSE.Evaluation.Compile() then parses parameters to determine if the program is runnable. If any errors are caught when compiling, a BOOSE.CommandException is thrown. Declaration public override void Compile() Overrides BOOSE.Evaluation.Compile() Exceptions Type Condition CommandException CommandException is thrown if any of the parameters cannot be parsed or the array type passed by the user is not recognised. | Edit this page View Source Execute() This method calls BOOSE.Evaluation.Execute() then creates an array of the type specified by given parameter. If the type is not recognised a BOOSE.CommandException is thrown. Declaration public override void Execute() Overrides BOOSE.Evaluation.Execute() Exceptions Type Condition CommandException CommandException is thrown if the given array type is unknown. | Edit this page View Source ProcessArrayParametersCompile(bool) Processes array parameters during compilation. Determines the poke or peek values and validates provided parameters. Declaration public void ProcessArrayParametersCompile(bool isPoke) Parameters Type Name Description bool isPoke Determines if the operation is poke or peek. Exceptions Type Condition CommandException Throw when invalid parameters are passed | Edit this page View Source ProcessArrayParametersExecute(bool) Processes the array parameters during execution. Validates parsed values and then performs the poke or peek operation. Declaration public void ProcessArrayParametersExecute(bool isPoke) Parameters Type Name Description bool isPoke Determines if the operation is poke or peek. Exceptions Type Condition CommandException Thrown if column or row values are invalid, or the variable type is not real or int. Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppCanvas.html": {
    "href": "api/ASE_Assignment.AppCanvas.html",
    "title": "Class AppCanvas | ASE_Docs",
    "keywords": "Class AppCanvas Initialises drawing surface and provides methods for drawing and also manages the drawing surface. Inheritance object AppCanvas Implements ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppCanvas : ICanvas Constructors | Edit this page View Source AppCanvas(int, int) Initialises an instance of the AppCanvas class using the width and height provided. Declaration public AppCanvas(int width, int height) Parameters Type Name Description int width Width of the drawing surface int height Height of the drawing surface Examples appCanvas = new AppCanvas(pictureBox1.Width, pictureBox1.Height); Properties | Edit this page View Source PenColour Sets the pen colour used when drawing on the canvas. Declaration public object PenColour { get; set; } Property Value Type Description object | Edit this page View Source Xpos The current X position of the pen. Declaration public int Xpos { get; set; } Property Value Type Description int | Edit this page View Source Ypos The current Y position of the pen. Declaration public int Ypos { get; set; } Property Value Type Description int Methods | Edit this page View Source CheckWithinBounds(int, int) Checks if parameters given are within drawing surface bounds and throws BOOSE.CommandException if not. Declaration public void CheckWithinBounds(int x, int y) Parameters Type Name Description int x X position to be checked if within bounds. int y Y position to be checked if within bounds. Exceptions Type Condition CommandException Thrown if X or Y provided are out of bounds. | Edit this page View Source Circle(int, bool) Draws a circle from the current position with the specified radius, filled or unfilled. Declaration public void Circle(int radius, bool filled) Parameters Type Name Description int radius Radius of the circle drawn bool filled Bool representing if the circle should be filled Examples appCanvas.Circle(100, true); Exceptions Type Condition CommandException Thrown if radius provided is less than or equal to zero | Edit this page View Source Clear() Clears the canvas by filling it with the current background colour. Declaration public void Clear() Examples appCanvas.Clear(); | Edit this page View Source DrawTo(int, int) Draws a line from the current position to the specified (x,y) coordinates and sets the current position to the (x,y) coordinates. Declaration public void DrawTo(int x, int y) Parameters Type Name Description int x X coordinate to draw to int y Y coordinate to draw to Examples appCanvas.DrawTo(100, 100); Exceptions Type Condition CommandException Thrown if the length of the line to be drawn will be zero | Edit this page View Source MoveTo(int, int) Moves pen position to given (x,y) coordinate. Declaration public void MoveTo(int x, int y) Parameters Type Name Description int x X position to move to. int y Y position to move to. Examples appCanvas.MoveTo(100, 100); | Edit this page View Source Rect(int, int, bool) Draws a rectangle with the specified width and height, filled or unfilled. Declaration public void Rect(int width, int height, bool filled) Parameters Type Name Description int width Width of the rectangle int height Height of the rectangle bool filled Bool representing if the rectangle should be filled Examples appCanvas.Rect(width, height, true); Exceptions Type Condition CommandException Thrown if either width or height are less than or equal to 0 | Edit this page View Source Reset() Resets the pen position to (x,y) coordinates (0,0). Declaration public void Reset() | Edit this page View Source Set(int, int) Initialises then sets the default conditions of the canvas, such as background colour and pen colour. Declaration public void Set(int width, int height) Parameters Type Name Description int width Width of the drawing surface int height Height of the drawing surface Examples appCanvas.Set(width, height); | Edit this page View Source SetColour(int, int, int) Sets the pen colour using RGB values. Declaration public void SetColour(int red, int green, int blue) Parameters Type Name Description int red Red value of pen colour int green Green value of pen colour int blue Blue value of pen colour Examples appCanvas.SetColour(255, 255, 255); | Edit this page View Source Tri(int, int) Draws a triangle using the specified width and height. Declaration public void Tri(int width, int height) Parameters Type Name Description int width Width used to draw triangle int height Height used to draw triangle Examples appCanvas.Tri(width, height); Exceptions Type Condition CommandException Thrown if either width or height are less than or equal to 0 | Edit this page View Source WriteText(string) Writes text on the canvas using the provided string. Declaration public void WriteText(string text) Parameters Type Name Description string text Text to be written on the canvas Examples appCanvas.WriteText(\"hello\"); Exceptions Type Condition CommandException Thrown if the string provided has a length of zero or less | Edit this page View Source getBitmap() Used to retrieve the bitmap of the AppCanvas drawing surface Declaration public object getBitmap() Returns Type Description object Object of the drawing surface Examples Bitmap updatedBitmap = (Bitmap)appCanvas.getBitmap(); Implements BOOSE.ICanvas"
  },
  "api/ASE_Assignment.AppCommandFactory.html": {
    "href": "api/ASE_Assignment.AppCommandFactory.html",
    "title": "Class AppCommandFactory | ASE_Docs",
    "keywords": "Class AppCommandFactory Factory class for creating instances of ASE_Assignment and BOOSE commands.S Inheritance object CommandFactory AppCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppCommandFactory : CommandFactory, ICommandFactory Methods | Edit this page View Source MakeCommand(string) Creates an instance of specified command based on commandType provided. Declaration public override ICommand MakeCommand(string commandType) Parameters Type Name Description string commandType String correlating to class constructor to be initialised. If commandType is not recognised BOOSE.CommandFactory is called to determine if the command exists within BOOSE library. Returns Type Description ICommand Returns ICommand object corresponding to the commandType Overrides CommandFactory.MakeCommand(string) Implements BOOSE.ICommandFactory"
  },
  "api/ASE_Assignment.AppCompoundCommand.html": {
    "href": "api/ASE_Assignment.AppCompoundCommand.html",
    "title": "Class AppCompoundCommand | ASE_Docs",
    "keywords": "Class AppCompoundCommand Represents a compound command (such as an if, while, or for loop) that corresponds to a conditional command. Inheritance object Command Evaluation Boolean ConditionalCommand AppCompoundCommand AppIf AppWhile Implements ICommand Inherited Members ConditionalCommand.endLineNumber ConditionalCommand.Compile() ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppCompoundCommand : ConditionalCommand, ICommand Properties | Edit this page View Source CorrespondingCommand Gets or sets the corresponding conditional command that this compound command is paired with. Declaration public ConditionalCommand CorrespondingCommand { get; set; } Property Value Type Description ConditionalCommand Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppElse.html": {
    "href": "api/ASE_Assignment.AppElse.html",
    "title": "Class AppElse | ASE_Docs",
    "keywords": "Class AppElse Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Else AppElse Implements ICommand Inherited Members Else.CheckParameters(string[]) Else.Compile() Else.Execute() Else.CorrespondingEnd CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppElse : Else, ICommand Constructors | Edit this page View Source AppElse() Declaration public AppElse() Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppEnd.html": {
    "href": "api/ASE_Assignment.AppEnd.html",
    "title": "Class AppEnd | ASE_Docs",
    "keywords": "Class AppEnd End command for if, while and for commands. This handles the termination of loops and conditional blocks. Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand End AppEnd Implements ICommand Inherited Members End.Compile() CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppEnd : End, ICommand Methods | Edit this page View Source Execute() Executes the end command logic, updating the program counter based on the loop type (if, while, or for). For if loops it simply returns, for while loops it returns to the line of the while, and for \"for\" loops it returns to the line after the loop is initiated. Declaration public override void Execute() Overrides BOOSE.End.Execute() Exceptions Type Condition CommandException Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppFor.html": {
    "href": "api/ASE_Assignment.AppFor.html",
    "title": "Class AppFor | ASE_Docs",
    "keywords": "Class AppFor Blank command that extends BOOSE.For, only current use is to simplify AppCommandFactory. Inheritance object Command Evaluation Boolean ConditionalCommand For AppFor Implements ICommand Inherited Members For.Compile() For.Execute() For.LoopControlV For.From For.To For.Step ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppFor : For, ICommand Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppIf.html": {
    "href": "api/ASE_Assignment.AppIf.html",
    "title": "Class AppIf | ASE_Docs",
    "keywords": "Class AppIf Blank command which is used in the factory for creating an AppCompoundCommand. Inheritance object Command Evaluation Boolean ConditionalCommand AppCompoundCommand AppIf Implements ICommand Inherited Members AppCompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Compile() ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppIf : AppCompoundCommand, ICommand Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppInt.html": {
    "href": "api/ASE_Assignment.AppInt.html",
    "title": "Class AppInt | ASE_Docs",
    "keywords": "Class AppInt Extends BOOSE.Int to remove the restrictions on using the type \"int\". Inheritance object Command Evaluation Int AppInt Implements ICommand Inherited Members Int.Compile() Int.Execute() Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppInt : Int, ICommand Methods | Edit this page View Source Restrictions() Overrides the base Restrictions() function to remove the restriction on using the int type. Declaration public override void Restrictions() Overrides BOOSE.Int.Restrictions() Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppPeek.html": {
    "href": "api/ASE_Assignment.AppPeek.html",
    "title": "Class AppPeek | ASE_Docs",
    "keywords": "Class AppPeek Represents peek operation within the application, inherits from AppArray and overrides functionality to perform compilation and execution of the peek command. Inheritance object Command Evaluation AppArray AppPeek Implements ICommand Inherited Members AppArray.variableType AppArray.pokeValue AppArray.peekValue AppArray.valueInt AppArray.valueReal AppArray.CheckParameters(string[]) AppArray.ProcessArrayParametersCompile(bool) AppArray.ProcessArrayParametersExecute(bool) Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppPeek : AppArray, ICommand Methods | Edit this page View Source Compile() Compiles the peek command by processing the provided parameters. Declaration public override void Compile() Overrides AppArray.Compile() | Edit this page View Source Execute() Executes the array command by retrieving the variable value based on the provided parameters. Declaration public override void Execute() Overrides AppArray.Execute() Exceptions Type Condition CommandException Thrown if an unknown variable type is encountered. Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppPoke.html": {
    "href": "api/ASE_Assignment.AppPoke.html",
    "title": "Class AppPoke | ASE_Docs",
    "keywords": "Class AppPoke Represents poke operation within the application, inherits from AppArray and overrides functionality to perform compilation and execution of the poke command. Inheritance object Command Evaluation AppArray AppPoke Implements ICommand Inherited Members AppArray.variableType AppArray.pokeValue AppArray.peekValue AppArray.valueInt AppArray.valueReal AppArray.CheckParameters(string[]) AppArray.ProcessArrayParametersCompile(bool) AppArray.ProcessArrayParametersExecute(bool) Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppPoke : AppArray, ICommand Methods | Edit this page View Source Compile() Compile the poke commands by processing array parameters. Declaration public override void Compile() Overrides AppArray.Compile() | Edit this page View Source Execute() Executes the poke command by updating the value at the specified row and column. Declaration public override void Execute() Overrides AppArray.Execute() Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppReal.html": {
    "href": "api/ASE_Assignment.AppReal.html",
    "title": "Class AppReal | ASE_Docs",
    "keywords": "Class AppReal Extends BOOSE.Real to remove the restrictions on using the type \"real\". Inheritance object Command Evaluation Real AppReal Implements ICommand Inherited Members Real.Compile() Real.Execute() Real.Value Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppReal : Real, ICommand Methods | Edit this page View Source Restrictions() Overrides the base restrictions() function the remove the restrictions on using type real. Declaration public override void Restrictions() Overrides BOOSE.Real.Restrictions() Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.AppStoredProgram.html": {
    "href": "api/ASE_Assignment.AppStoredProgram.html",
    "title": "Class AppStoredProgram | ASE_Docs",
    "keywords": "Class AppStoredProgram Inheritance object ArrayList StoredProgram AppStoredProgram Implements IList ICollection IEnumerable ICloneable IStoredProgram Inherited Members StoredProgram.SyntaxOk StoredProgram.AddMethod(Method) StoredProgram.GetMethod(string) StoredProgram.AddVariable(Evaluation) StoredProgram.GetVariable(string) StoredProgram.GetVariable(int) StoredProgram.FindVariable(Evaluation) StoredProgram.FindVariable(string) StoredProgram.VariableExists(string) StoredProgram.GetVarValue(string) StoredProgram.UpdateVariable(string, int) StoredProgram.UpdateVariable(string, double) StoredProgram.UpdateVariable(string, bool) StoredProgram.DeleteVariable(string) StoredProgram.IsExpression(string) StoredProgram.EvaluateExpressionWithString(string) StoredProgram.EvaluateExpression(string) StoredProgram.Push(ConditionalCommand) StoredProgram.Pop() StoredProgram.Add(Command) StoredProgram.NextCommand() StoredProgram.ResetProgram() StoredProgram.Commandsleft() StoredProgram.PC ArrayList.Adapter(IList) ArrayList.Add(object) ArrayList.AddRange(ICollection) ArrayList.BinarySearch(int, int, object, IComparer) ArrayList.BinarySearch(object) ArrayList.BinarySearch(object, IComparer) ArrayList.Clear() ArrayList.Clone() ArrayList.Contains(object) ArrayList.CopyTo(Array) ArrayList.CopyTo(Array, int) ArrayList.CopyTo(int, Array, int, int) ArrayList.FixedSize(ArrayList) ArrayList.FixedSize(IList) ArrayList.GetEnumerator() ArrayList.GetEnumerator(int, int) ArrayList.GetRange(int, int) ArrayList.IndexOf(object) ArrayList.IndexOf(object, int) ArrayList.IndexOf(object, int, int) ArrayList.Insert(int, object) ArrayList.InsertRange(int, ICollection) ArrayList.LastIndexOf(object) ArrayList.LastIndexOf(object, int) ArrayList.LastIndexOf(object, int, int) ArrayList.ReadOnly(ArrayList) ArrayList.ReadOnly(IList) ArrayList.Remove(object) ArrayList.RemoveAt(int) ArrayList.RemoveRange(int, int) ArrayList.Repeat(object, int) ArrayList.Reverse() ArrayList.Reverse(int, int) ArrayList.SetRange(int, ICollection) ArrayList.Sort() ArrayList.Sort(IComparer) ArrayList.Sort(int, int, IComparer) ArrayList.Synchronized(ArrayList) ArrayList.Synchronized(IList) ArrayList.ToArray() ArrayList.ToArray(Type) ArrayList.TrimToSize() ArrayList.Capacity ArrayList.Count ArrayList.IsFixedSize ArrayList.IsReadOnly ArrayList.IsSynchronized ArrayList.this[int] ArrayList.SyncRoot object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppStoredProgram : StoredProgram, IList, ICollection, IEnumerable, ICloneable, IStoredProgram Constructors | Edit this page View Source AppStoredProgram(ICanvas) Constructor calls base constructor of the StoredProgram class within BOOSE with the canvas provided. Declaration public AppStoredProgram(ICanvas canvas) Parameters Type Name Description ICanvas canvas Canvas to be passed to the stored program class. Methods | Edit this page View Source Run() Declaration public override void Run() Overrides BOOSE.StoredProgram.Run() Exceptions Type Condition StoredProgramException Implements IList ICollection IEnumerable ICloneable BOOSE.IStoredProgram"
  },
  "api/ASE_Assignment.AppWhile.html": {
    "href": "api/ASE_Assignment.AppWhile.html",
    "title": "Class AppWhile | ASE_Docs",
    "keywords": "Class AppWhile Blank command which is used in the factory for creating an AppCompoundCommand. Inheritance object Command Evaluation Boolean ConditionalCommand AppCompoundCommand AppWhile Implements ICommand Inherited Members AppCompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Compile() ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class AppWhile : AppCompoundCommand, ICommand Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.BooseInterpreter.html": {
    "href": "api/ASE_Assignment.BooseInterpreter.html",
    "title": "Class BooseInterpreter | ASE_Docs",
    "keywords": "Class BooseInterpreter Represents the main form of the application, handling user input and the drawing canvas. Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form BooseInterpreter Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class BooseInterpreter : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Constructors | Edit this page View Source BooseInterpreter() Initialises new instance of BooseInterpreter class. Initialises the application and sets up the canvas. Declaration public BooseInterpreter() Methods | Edit this page View Source Dispose(bool) Clean up any resources being used. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing true if managed resources should be disposed; otherwise, false. Overrides Form.Dispose(bool) | Edit this page View Source UpdatePictureBox() Initiates a redraw of the picture box by invalidating its current state. Declaration public void UpdatePictureBox() Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl"
  },
  "api/ASE_Assignment.Circle.html": {
    "href": "api/ASE_Assignment.Circle.html",
    "title": "Class Circle | ASE_Docs",
    "keywords": "Class Circle Command to draw a circle on the canvas. Inheritance object Command CanvasCommand CommandOneParameter Circle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class Circle : CommandOneParameter, ICommand Constructors | Edit this page View Source Circle() Initialises new instance of Circle with no parameters. Declaration public Circle() | Edit this page View Source Circle(int) Initialises new instance of Circle with a specified canvas and radius. Declaration public Circle(int radius) Parameters Type Name Description int radius The radius of the circle that will be drawn. Methods | Edit this page View Source CheckParameters(string[]) Checks if Circle command has been called with the correct amount of parameters. Declaration public override void CheckParameters(string[] parameterList) Parameters Type Name Description string[] parameterList String array to be checked to ensure the correct number of parameters has been passed. Overrides CommandOneParameter.CheckParameters(string[]) Exceptions Type Condition CommandException Thrown if the number of parameters is not 1. | Edit this page View Source Execute() Calls BOOSE.Command.Execute(), then draws a circle with specified radius. Declaration public override void Execute() Overrides BOOSE.Command.Execute() Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.Form1.html": {
    "href": "api/ASE_Assignment.Form1.html",
    "title": "Class Form1 | ASE_Docs",
    "keywords": "Class Form1 Represents the main form of the application, handling user input and the drawing canvas. Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form1 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class Form1 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Constructors | Edit this page View Source Form1() Initialises new instance of Form1 class. Initialises the application and sets up the canvas. Declaration public Form1() Methods | Edit this page View Source Dispose(bool) Clean up any resources being used. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing true if managed resources should be disposed; otherwise, false. Overrides Form.Dispose(bool) | Edit this page View Source UpdatePictureBox() Initiates a redraw of the picture box by invalidating its current state. Declaration public void UpdatePictureBox() Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl"
  },
  "api/ASE_Assignment.MoveTo.html": {
    "href": "api/ASE_Assignment.MoveTo.html",
    "title": "Class MoveTo | ASE_Docs",
    "keywords": "Class MoveTo Command which moves the pen to specified (x,y) coordinates. Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters MoveTo Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandTwoParameters.CheckParameters(string[]) CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class MoveTo : CommandTwoParameters, ICommand Methods | Edit this page View Source Execute() Calls BOOSE.Command.Execute(), then moves the pen to specified (x,y) coordinates. Declaration public override void Execute() Overrides BOOSE.Command.Execute() Implements BOOSE.ICommand See Also CommandTwoParameters"
  },
  "api/ASE_Assignment.PenColour.html": {
    "href": "api/ASE_Assignment.PenColour.html",
    "title": "Class PenColour | ASE_Docs",
    "keywords": "Class PenColour Command which sets the pen colour to draw with using RGB values. Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandThreeParameters PenColour Implements ICommand Inherited Members CommandThreeParameters.param3 CommandThreeParameters.param3unprocessed CommandThreeParameters.CheckParameters(string[]) CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class PenColour : CommandThreeParameters, ICommand Methods | Edit this page View Source Execute() Calls BOOSE.Command.Execute(), then sets the pen colour to the specified RGB values. Declaration public override void Execute() Overrides BOOSE.Command.Execute() Implements BOOSE.ICommand See Also CommandThreeParameters"
  },
  "api/ASE_Assignment.Rect.html": {
    "href": "api/ASE_Assignment.Rect.html",
    "title": "Class Rect | ASE_Docs",
    "keywords": "Class Rect Command to draw a rectangle on the canvas. Inheritance object Command CanvasCommand CommandOneParameter Rect Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class Rect : CommandOneParameter, ICommand Constructors | Edit this page View Source Rect() Initialises new instance of Rect with no parameters. Declaration public Rect() | Edit this page View Source Rect(int, int) Initialises new instance of Rect using specified width and height. Declaration public Rect(int width, int height) Parameters Type Name Description int width Width of rectangle to be created int height Height of rectangle to be created Methods | Edit this page View Source CheckParameters(string[]) Checks if the Rect command has been called with the correct amount of parameters. Declaration public override void CheckParameters(string[] parameterList) Parameters Type Name Description string[] parameterList String array to be checked to ensure the correct number of parameters has been passed. Overrides CommandOneParameter.CheckParameters(string[]) Exceptions Type Condition CommandException Thrown if the number of parameters is not 2. | Edit this page View Source Execute() Calls BOOSE.Command.Execute(), then draws a rectangle with specified width and height. Declaration public override void Execute() Overrides BOOSE.Command.Execute() Implements BOOSE.ICommand See Also CommandOneParameter"
  },
  "api/ASE_Assignment.Tri.html": {
    "href": "api/ASE_Assignment.Tri.html",
    "title": "Class Tri | ASE_Docs",
    "keywords": "Class Tri Command to draw a triangle on the canvas. Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters Tri Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class Tri : CommandTwoParameters, ICommand Constructors | Edit this page View Source Tri() Initialises a new instance of Tri(int, int) using no parameters. Declaration public Tri() | Edit this page View Source Tri(int, int) Initialises a new instance of Tri(int, int) using a specified width and height. Declaration public Tri(int width, int height) Parameters Type Name Description int width Width to be used to draw triangle int height Height to be used to draw triangle Methods | Edit this page View Source CheckParameters(string[]) Checks if the Tri(int, int) command has been called with the correct amount of parameters. Declaration public override void CheckParameters(string[] parameterList) Parameters Type Name Description string[] parameterList String array to be checked to ensure the correct number of parameters has been passed. Overrides CommandTwoParameters.CheckParameters(string[]) Exceptions Type Condition CommandException Thrown if the number of parameters is not 2. | Edit this page View Source Execute() Calls BOOSE.Command.Execute(), then draws a triangle using specified width and height. Declaration public override void Execute() Overrides BOOSE.Command.Execute() Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.WriteText.html": {
    "href": "api/ASE_Assignment.WriteText.html",
    "title": "Class WriteText | ASE_Docs",
    "keywords": "Class WriteText Command to write a string on the canvas. Inheritance object Command CanvasCommand CommandOneParameter WriteText Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ASE_Assignment Assembly: ASE_Assignment.dll Syntax public class WriteText : CommandOneParameter, ICommand Constructors | Edit this page View Source WriteText() Initialises new instance of WriteText with no parameters. Declaration public WriteText() | Edit this page View Source WriteText(string) Initialises new instance of WriteText with a specified canvas and string. Declaration public WriteText(string text) Parameters Type Name Description string text Methods | Edit this page View Source CheckParameters(string[]) Checks if WriteText has been called with the correct amount of parameters. Declaration public override void CheckParameters(string[] parameterList) Parameters Type Name Description string[] parameterList String array to be checked to ensure the correct number of parameters has been passed. Overrides CommandOneParameter.CheckParameters(string[]) Exceptions Type Condition CommandException Thrown if the number of parameters is not 1. | Edit this page View Source Execute() Calls BOOSE.Command.Execute(), then writes text using the specified string. Declaration public override void Execute() Overrides BOOSE.Command.Execute() Implements BOOSE.ICommand"
  },
  "api/ASE_Assignment.html": {
    "href": "api/ASE_Assignment.html",
    "title": "Namespace ASE_Assignment | ASE_Docs",
    "keywords": "Namespace ASE_Assignment Classes AppArray Array class for creating array variables within the BOOSE language. AppCanvas Initialises drawing surface and provides methods for drawing and also manages the drawing surface. AppCommandFactory Factory class for creating instances of ASE_Assignment and BOOSE commands.S AppCompoundCommand Represents a compound command (such as an if, while, or for loop) that corresponds to a conditional command. AppElse AppEnd End command for if, while and for commands. This handles the termination of loops and conditional blocks. AppFor Blank command that extends BOOSE.For, only current use is to simplify AppCommandFactory. AppIf Blank command which is used in the factory for creating an AppCompoundCommand. AppInt Extends BOOSE.Int to remove the restrictions on using the type \"int\". AppPeek Represents peek operation within the application, inherits from AppArray and overrides functionality to perform compilation and execution of the peek command. AppPoke Represents poke operation within the application, inherits from AppArray and overrides functionality to perform compilation and execution of the poke command. AppReal Extends BOOSE.Real to remove the restrictions on using the type \"real\". AppStoredProgram AppWhile Blank command which is used in the factory for creating an AppCompoundCommand. BooseInterpreter Represents the main form of the application, handling user input and the drawing canvas. Circle Command to draw a circle on the canvas. MoveTo Command which moves the pen to specified (x,y) coordinates. PenColour Command which sets the pen colour to draw with using RGB values. Rect Command to draw a rectangle on the canvas. Tri Command to draw a triangle on the canvas. WriteText Command to write a string on the canvas."
  },
  "api/ASE_AssignmentTests.AppCanvasTests.html": {
    "href": "api/ASE_AssignmentTests.AppCanvasTests.html",
    "title": "Class AppCanvasTests | ASE_Docs",
    "keywords": "Class AppCanvasTests Inheritance object AppCanvasTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ASE_AssignmentTests Assembly: ASE_AssignmentTests.dll Syntax [TestClass] public class AppCanvasTests Methods | Edit this page View Source Setup() Creates new canvas for testing purposes, uses specified width and height of 800px,800px. Declaration [TestInitialize] public void Setup() | Edit this page View Source TestAppArray_NoRestrictions() Test to ensure that the AppArray can be used without BOOSE restrictions. Declaration [TestMethod] public void TestAppArray_NoRestrictions() | Edit this page View Source TestAppFor_NoRestrictions() Test to ensure that AppFor can be used without BOOSE restrictions. Declaration [TestMethod] public void TestAppFor_NoRestrictions() | Edit this page View Source TestAppIf_NoRestrictions() Test to ensure that AppIf can be used without BOOSE restrictions. Declaration [TestMethod] public void TestAppIf_NoRestrictions() | Edit this page View Source TestAppInt_NoRestrictions() Test to ensure that the AppInt can be used without BOOSE restrictions. Declaration [TestMethod] public void TestAppInt_NoRestrictions() | Edit this page View Source TestAppReal_NoRestrictions() Test to ensure that the AppReal can be used without BOOSE restrictions. Declaration [TestMethod] public void TestAppReal_NoRestrictions() | Edit this page View Source TestAppWhile_NoRestrictions() Test to ensure that AppWhile can be used without BOOSE restrictions. Declaration [TestMethod] public void TestAppWhile_NoRestrictions() | Edit this page View Source TestDrawTo_SetsPenPosition() Test to ensure DrawTo command correctly sets pen X and Y position after drawing. Declaration [TestMethod] public void TestDrawTo_SetsPenPosition() | Edit this page View Source TestMoveTo_SetsPenPosition() Test to ensure MoveTo command correctly sets pen X and Y position. Declaration [TestMethod] public void TestMoveTo_SetsPenPosition() | Edit this page View Source TestMultilineProgram_NoRestrictions() Test to ensure multiline programs can be run even if command parameters exceed BOOSE restrictions. Declaration [TestMethod] public void TestMultilineProgram_NoRestrictions() | Edit this page View Source TestMultilineProgram_WithRestrictions() Test to ensure multiline programs can be run with command parameters that don't exceed BOOSE restrictions. Declaration [TestMethod] public void TestMultilineProgram_WithRestrictions()"
  },
  "api/ASE_AssignmentTests.html": {
    "href": "api/ASE_AssignmentTests.html",
    "title": "Namespace ASE_AssignmentTests | ASE_Docs",
    "keywords": "Namespace ASE_AssignmentTests Classes AppCanvasTests"
  },
  "index.html": {
    "href": "index.html",
    "title": "ASE Documentation | ASE_Docs",
    "keywords": "ASE Documentation Overview This project extends the functionality of the BOOSE.dll library, a programming language library created by Duncan Mullier. This project adds features such as a user friendly GUI, drawing commands with no restrictions, and exception handling to enhance the BOOSE library. Author and Group Information Student: Josh Dennis Group: 2 Tutor: Duncan Mullier"
  }
}